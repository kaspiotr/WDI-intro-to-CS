#include<iostream>
#include<ctime>

using namespace std;

const int max = 7;

const double eps = 10e-5;

bool isPrime(int n) {
	
	if (n == 0) return false;	
	if (n == 1) return false;
	if (n == 2) return true;
	for (int i = 2; i <= 2; i++) {
		if (n%i == 0) return false;
	}
	return true;

}

void geo(int tab[max][max]) {

	//(tab[i+b][j+b]/tab[i+a][j+a])==(tab[i+c][j+c]/tab[i+b][j+b])
	
	double q; double q_tmp; int len; int max_len = 0; int a, b, c;

	for (int i = 0; i < max - 2; i++) {
		for (int j = 0; j < max - 2; j++) {
			len = 0; a = 0; b = 1; c = 2;
			q = double(tab[i + b][j + b]) / double(tab[i + a][j + a]);
			q_tmp = double(tab[i + c][j + c]) / double(tab[i + b][j + b]);
			if (abs(q - q_tmp) < eps) {
				len += 3;
				while (i + c < max && j + c < max && abs(q - q_tmp) < eps) {
					b++; c++;
					q_tmp = double(tab[i + c][j + c]) / double(tab[i + b][j + b]);
					if (abs(q - q_tmp) < eps) len++;
				}
			}
			if (len > max_len) max_len = len;
		}
	}
	cout << max_len;
}


int main()
{
	srand(time(NULL));

	int tab[max][max];
	int c;

	for (int i = 0; i < max; i++) {
		for (int j = 0; j < max; j++) {
			c = rand() % 100;
			while(!isPrime(c)) c = rand() % 100;
			tab[i][j] = c;
		}
	}

	
	tab[1][2] = 4; tab[2][3] = 8; tab[3][4] = 16; tab[4][5] = 32; tab[5][6] = 64; //ciag geo len=5;

	tab[4][4] = 16; tab[5][5] = 48; tab[6][6] = 144;

	for (int i = 0; i < max; i++) {
		for (int j = 0; j < max; j++) {
			cout << tab[i][j] << " ";
		}
		cout << endl << endl;
	}

	cout << "CIAG LEN: "; geo(tab);
	cout << endl;

    return 0;
}
